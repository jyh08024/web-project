1. 소개1
내용 : Every book you’ve ever read perpetuates a big fat lie. And I’m here to out the
publishing industry’s dirty little secret—books are not “by” only one person. Yes,
you see only one name on book covers (including this one), but it takes a team of
dedicated people to pull off the final product. Authors could not do it alone; I
certainly could not have done it alone. So I want to thank all those who helped
make this book a reality.
Thanks to Jenny Davidson for her dual role as Project Editor and Copy Editor.
Jenny kept me on schedule and my commas in place.
Thanks to Maneesh Sethi, my Technical Reviewer, who made sure my programs
worked the way I said they did.
Thanks to Michael Beady, my Proofreader. His work makes this book look
good—literally.
I also want to thank Emi Smith, my Senior Acquisitions Editor, for all of her
encouragement.
Finally, I want to thank all of the game programmers who created the games I
played while growing up. They inspired me to work in the industry and create
games of my own. I hope I can inspire a few readers to do the same.



2. 소개2
내용 : Michael Dawson is a game programming author and instructor who teaches
students the art and science of writing their own games. Mike has developed and
taught game programming courses for UCLA Extension, The Digital Media
Academy, and The Los Angeles Film School. In addition, his books have been
required reading in colleges and universities around the country.
Mike got his start in the game industry as a producer and designer, but he also
“starred” in an adventure game in which the player controls the main character,
named Mike Dawson. In the game, the player directs the digitized images of
Dawson, who must stop an extraterrestrial invasion before an implanted alien
embryo is born from his head.
In real life, Mike is the author of Beginning Cþþ Through Game Programming,
Python Programming for the Absolute Beginner, Cþþ Projects: Programming with
Text-Based Games, and Guide to Programming with Python. He earned his
bachelor’s degree in Computer Science from the University of Southern
California. Visit his website at www.programgames.com to learn more or to get
support for any of his books.


3. 소개3
The Play Again 2.0 program looks exactly the same to the user as the original
Play Again program. Play Again 2.0, like its predecessor, simulates the play of an
exciting game by displaying the message “**Played an exciting game**” and
asking the user whether he wants to play again. The user continues to play as
long as he enters y. This time, though, the program accomplishes the repetition
using a do loop. Figure 2.7 shows off the program.
You can download the code for this program from the Course Technology
website (www.courseptr.com/downloads). The program is in the Chapter 2
folder; the filename is play_again2.cpp.